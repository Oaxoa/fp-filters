{
  "name": "fp-filters",
  "version": "0.3.0",
  "description": "Curated collection of commonly used filter functions that are tiny, tested and composable",
  "author": "Pierluigi Pesenti",
  "license": "MIT",
  "types": "./dist/esm/index.d.ts",
  "files": [
    "dist/"
  ],
  "keywords": [
    "filter",
    "filter functions",
    "filters",
    "filtering",
    "common filters",
    "common filter functions",
    "curated common filter functions",
    "fp filters",
    "functional programming filters",
    "functional programming",
    "typescript",
    "ts",
    "functional filters",
    "data-manipulation",
    "utility functions",
    "array filters",
    "functional utilities",
    "curated filters",
    "fp",
    "lambda functions",
    "high order functions",
    "code reusability",
    "collection processing",
    "data filtering",
    "streamlined code",
    "fp ts",
    "functional style",
    "immutable functions"
  ],
  "type": "module",
  "repository": "https://github.com/Oaxoa/fp-filters",
  "dependencies": {
    "fp-booleans": "0.5.1"
  },
  "devDependencies": {
    "@eslint/js": "9.14.0",
    "@types/jest": "29.5.14",
    "eslint": "9.14.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-import": "2.31.0",
    "jest": "29.7.0",
    "prettier": "3.3.3",
    "ts-jest": "29.2.5",
    "typescript": "5.6.3",
    "typescript-eslint": "8.13.0"
  },
  "scripts": {
    "build:ts:cjs": "tsc -p tsconfig.cjs.json",
    "build:ts:esm": "tsc -p tsconfig.esm.json",
    "build": "yarn clean && yarn build:ts:cjs && yarn build:ts:esm",
    "clean": "rm -rf ./dist",
    "lint": "eslint .",
    "pack": "yarn --cwd ./dist pack",
    "prettier": "prettier '**/*.ts'",
    "prettier:fix": "prettier --write '**/*.ts'",
    "test": "jest --coverage",
    "test:watch": "jest --watchAll"
  },
  "main": "./dist/cjs/index.js",
  "module": "./dist/esm/index.js",
  "exports": {
    "./*": {
      "import": "./dist/esm/index.js",
      "require": "./dist/cjs/index.js",
      "types": "./dist/esm/index.d.ts"
    }
  }
}
